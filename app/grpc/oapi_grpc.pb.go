// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pricelists

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PricelistsClient is the client API for Pricelists service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PricelistsClient interface {
	CreatePriceListItem(ctx context.Context, in *PriceListItem, opts ...grpc.CallOption) (*PriceListItem, error)
	DeletePriceList(ctx context.Context, in *ID, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdatePriceListItem(ctx context.Context, in *PriceListItem, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetPriceList(ctx context.Context, in *ID, opts ...grpc.CallOption) (*PriceListRowsResponse, error)
}

type pricelistsClient struct {
	cc grpc.ClientConnInterface
}

func NewPricelistsClient(cc grpc.ClientConnInterface) PricelistsClient {
	return &pricelistsClient{cc}
}

func (c *pricelistsClient) CreatePriceListItem(ctx context.Context, in *PriceListItem, opts ...grpc.CallOption) (*PriceListItem, error) {
	out := new(PriceListItem)
	err := c.cc.Invoke(ctx, "/pricelists/CreatePriceListItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricelistsClient) DeletePriceList(ctx context.Context, in *ID, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/pricelists/DeletePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricelistsClient) UpdatePriceListItem(ctx context.Context, in *PriceListItem, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/pricelists/UpdatePriceListItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricelistsClient) GetPriceList(ctx context.Context, in *ID, opts ...grpc.CallOption) (*PriceListRowsResponse, error) {
	out := new(PriceListRowsResponse)
	err := c.cc.Invoke(ctx, "/pricelists/GetPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PricelistsServer is the server API for Pricelists service.
// All implementations must embed UnimplementedPricelistsServer
// for forward compatibility
type PricelistsServer interface {
	CreatePriceListItem(context.Context, *PriceListItem) (*PriceListItem, error)
	DeletePriceList(context.Context, *ID) (*emptypb.Empty, error)
	UpdatePriceListItem(context.Context, *PriceListItem) (*emptypb.Empty, error)
	GetPriceList(context.Context, *ID) (*PriceListRowsResponse, error)
	mustEmbedUnimplementedPricelistsServer()
}

// UnimplementedPricelistsServer must be embedded to have forward compatible implementations.
type UnimplementedPricelistsServer struct {
}

func (UnimplementedPricelistsServer) CreatePriceListItem(context.Context, *PriceListItem) (*PriceListItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePriceListItem not implemented")
}
func (UnimplementedPricelistsServer) DeletePriceList(context.Context, *ID) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePriceList not implemented")
}
func (UnimplementedPricelistsServer) UpdatePriceListItem(context.Context, *PriceListItem) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePriceListItem not implemented")
}
func (UnimplementedPricelistsServer) GetPriceList(context.Context, *ID) (*PriceListRowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceList not implemented")
}
func (UnimplementedPricelistsServer) mustEmbedUnimplementedPricelistsServer() {}

// UnsafePricelistsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PricelistsServer will
// result in compilation errors.
type UnsafePricelistsServer interface {
	mustEmbedUnimplementedPricelistsServer()
}

func RegisterPricelistsServer(s grpc.ServiceRegistrar, srv PricelistsServer) {
	s.RegisterService(&Pricelists_ServiceDesc, srv)
}

func _Pricelists_CreatePriceListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceListItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricelistsServer).CreatePriceListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelists/CreatePriceListItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricelistsServer).CreatePriceListItem(ctx, req.(*PriceListItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pricelists_DeletePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricelistsServer).DeletePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelists/DeletePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricelistsServer).DeletePriceList(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pricelists_UpdatePriceListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceListItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricelistsServer).UpdatePriceListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelists/UpdatePriceListItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricelistsServer).UpdatePriceListItem(ctx, req.(*PriceListItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pricelists_GetPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricelistsServer).GetPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelists/GetPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricelistsServer).GetPriceList(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

// Pricelists_ServiceDesc is the grpc.ServiceDesc for Pricelists service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Pricelists_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pricelists",
	HandlerType: (*PricelistsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePriceListItem",
			Handler:    _Pricelists_CreatePriceListItem_Handler,
		},
		{
			MethodName: "DeletePriceList",
			Handler:    _Pricelists_DeletePriceList_Handler,
		},
		{
			MethodName: "UpdatePriceListItem",
			Handler:    _Pricelists_UpdatePriceListItem_Handler,
		},
		{
			MethodName: "GetPriceList",
			Handler:    _Pricelists_GetPriceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "oapi.proto",
}
